# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T09:09:08+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel

from . import Call


class JsonPostRequest(BaseModel):
    action_id: Optional[int] = Field(
        None,
        description="Action that this call is being logged for. This will validate that the action is still\nvalid before completing it. The same action can never be successfully passed twice to this endpoint. The\naction must have a type of 'phone'.\n",
    )
    crm_params: Optional[Dict[str, Any]] = Field(
        None,
        description='CRM specific parameters. Some parameters are required on a per-team basis. Consume the\nCrmActivityFields endpoint to receive a list of valid parameters. The "field" property\nis passed as the key of this object, and the value of this object is the value that you\nwould like to set.\n\nIf CrmActivityField has a non-null value, then that value must be submitted, or excluded\nfrom API calls, as these values are automatically applied.\n',
    )
    disposition: Optional[str] = Field(
        None,
        description='The disposition of the call. Can be required on a per-team basis. Must be present in the disposition list.',
    )
    duration: Optional[int] = Field(
        None, description='The length of the call, in seconds'
    )
    linked_call_data_record_ids: Optional[List[int]] = Field(
        None,
        description='CallDataRecord associations that will become linked to the created call. It is possible to pass\nmultiple CallDataRecord ids in this field; this can be used to represent multiple phone calls\nthat made up a single call.\n\nAny call data record that is used must not already be linked to a call. It is not possible\nto link a call data record to multiple calls, and it is not possible to re-assign a call data\nrecord to a different call.\n',
    )
    notes: Optional[str] = Field(
        None,
        description="Notes to log for the call. This is similar to the notes endpoint, but ensures that the notes get synced to the user's CRM",
    )
    person_id: int = Field(
        ..., description='The ID of the person whom this call will be logged for'
    )
    sentiment: Optional[str] = Field(
        None,
        description='The sentiment of the call. Can be required on a per-team basis. Must be present in the sentiment list.',
    )
    to: Optional[str] = Field(None, description='The phone number that was called')
    user_guid: Optional[str] = Field(
        None,
        description="Guid of the user whom this call should be logged for. Defaults to the authenticated user. Only team admins can pass another user's guid",
    )


class JsonGetResponse(RootModel[List[Call]]):
    root: List[Call]
