# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T09:09:08+00:00

from __future__ import annotations

from typing import Any, Dict, Optional

from pydantic import BaseModel, Field


class JsonPutRequest(BaseModel):
    allow_booking_on_behalf: Optional[bool] = Field(
        None, description='Allow other team members to schedule on you behalf.'
    )
    allow_booking_overtime: Optional[bool] = Field(
        None,
        description='Allow team members to insert available time outside your working hours.',
    )
    allow_event_overlap: Optional[bool] = Field(
        None, description='Allow team members to double book events on your calendar.'
    )
    availability_limit: Optional[int] = Field(
        None,
        description='The number of days out the user allows a prospect to schedule a meeting',
    )
    availability_limit_enabled: Optional[bool] = Field(
        None, description='If Availability Limits have been turned on'
    )
    buffer_time_duration: Optional[int] = Field(
        None, description='Default buffer duration in minutes set by a user'
    )
    calendar_type: Optional[str] = Field(None, description='Calendar type')
    default_meeting_length: Optional[int] = Field(
        None, description='Default meeting length in minutes set by the user'
    )
    description: Optional[str] = Field(
        None, description='Default description of the meeting'
    )
    enable_calendar_sync: Optional[bool] = Field(
        None, description='Determines if a user enabled Calendar Sync feature'
    )
    enable_dynamic_location: Optional[bool] = Field(
        None,
        description='Determines if location will be filled via third-party service (Zoom, GoToMeeting, etc.)',
    )
    location: Optional[str] = Field(None, description='Default location of the meeting')
    primary_calendar_connection_failed: Optional[bool] = Field(
        None, description='Determines if the user lost calendar connection'
    )
    primary_calendar_id: Optional[str] = Field(
        None, description='ID of the primary calendar'
    )
    primary_calendar_name: Optional[str] = Field(
        None, description='Display name of the primary calendar'
    )
    schedule_buffer_enabled: Optional[bool] = Field(
        None,
        description='Determines if meetings are scheduled with a 15 minute buffer between them',
    )
    schedule_delay: Optional[int] = Field(
        None,
        description='The number of hours in advance a user requires someone to a book a meeting with them',
    )
    share_event_detail: Optional[bool] = Field(
        None,
        description='Allow team members to see the details of events on your calendar.',
    )
    time_zone: Optional[str] = Field(None, description='Time zone for current calendar')
    times_available: Optional[Dict[str, Any]] = Field(
        None,
        description='Times available set by a user that can be used to book meetings',
    )
    title: Optional[str] = Field(None, description='Default title of the meeting')
