# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T09:09:08+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, RootModel

from . import Task


class JsonGetResponse(RootModel[List[Task]]):
    root: List[Task]


class JsonPostRequest(BaseModel):
    current_state: str = Field(
        ..., description='Current state of the task, valid options are: scheduled'
    )
    description: Optional[str] = Field(
        None,
        description='A description of the task recorded for person at completion time',
    )
    due_date: str = Field(
        ..., description='Date of when the Task is due, ISO-8601 date format required'
    )
    idempotency_key: Optional[str] = Field(
        None,
        description='Establishes a unique identifier to prevent duplicates from being created',
    )
    person_id: str = Field(..., description='ID of the person to be contacted')
    remind_at: Optional[str] = Field(
        None,
        description='Datetime of when the user will be reminded of the task, ISO-8601 datetime format required',
    )
    subject: str = Field(..., description='Subject line of the task.')
    task_type: str = Field(
        ..., description='Task type, valid options are: call, email, general'
    )
    user_id: int = Field(..., description='ID of the user linked to the task')
